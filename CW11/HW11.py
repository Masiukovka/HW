# 1. Написать функцию, которая принимает список словарей,
# где каждый словарь представляет собой запись об ученике
# (с ключами 'имя', 'возраст', 'оценки'), и возвращает список словарей,
# отсортированный по возрасту учеников в порядке убывания.

# def school(lst):
#     out_sch = sorted(lst, key=lambda x: x["возраст"], reverse=True)
#
#     return out_sch
#
#
# lst = [{"Имя": "Коля", "возраст": 9, "оценки": "4, 3, 5, 5"},
#        {"Имя": "Оля", "возраст": 10, "оценки": "3, 3, 5, 5", },
#        {"Имя": "Дима", "возраст": 8, "оценки": "5, 3, 5, 5"}]

# print(school(lst))


# 2*. Написать функцию, которая принимает дерево, представленное в виде списка списков,
# где каждый элемент списка может быть либо числом, либо подсписком,
# и возвращает сумму всех чисел в дереве.
# пример: [1, 2, [3, 4, [5, 6]], [12, 13], 11, 10]

# def sum_total(n):
#     sum = 0
#     for el in n:
#         if type(el) == list:
#             sum += sum_total(el)
#         else:
#             sum += el
#     return sum
#
#
# n = [1, 2, [3, 4, [5, 6]], [12, 13], 11, 10]
# print(sum_total(n))

# 3. Написать функцию, которая принимает список дат в формате 'ДД.ММ.ГГГГ'
# и возвращает список дат в формате 'ГГГГ-ММ-ДД', отсортированный по возрастанию.


# def ch_date(date_st):
#     date_out = [i.split(".") for i in date_st]
#     date_out1 = []
#     for i in date_out:
#         i[0], i[-1] = i[-1], i[0]
#         date_out1.append("-".join(i))
#
#     date_out1.sort()
#
#     return date_out1
#
# date_st = ["12.05.2005", "05.01.1998", "10.05.2005", "30.03.2021"]
#
# print(ch_date(date_st))