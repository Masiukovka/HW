# 1. Напишите функцию, которая принимает на вход список чисел и возвращает новый список,
# содержащий те же числа, но отсортированные по возрастанию.

# def sp_sor(sp):
#     sp.sort()
#     return sp
#
# sp = [1, 2, 1, 6, 10, 0, 99, 102, 88]
#
# print(sp_sor(sp))

# 2. Напишите функцию, которая принимает на вход список слов и возвращает новый список,
# содержащий только те слова, которые состоят только из букв (верхнего или нижнего регистра).

# def sp_sor(sp):
#     sp_out = [i for i in sp if i.isalpha()]
#     return sp_out
#
# sp = ["khkbjk", "bjjbb", "12255", "bjbkkn", "12154", "hhkhkn", "99", "hkbjhbjh", "88"]
#
# print(sp_sor(sp))

# 3. Напишите функцию, которая принимает на вход список чисел и возвращает новый список,
# содержащий только те числа, которые делятся на 3 без остатка.

# def sp_sor(sp):
#     sp_out = [i for i in sp if i % 3 == 0 and i != 0] # Опция не равно 0 ))
#     return sp_out
#
# sp = [1, 2, 1, 6, 10, 0, 99, 102, 88]
#
# print(sp_sor(sp))

# 4. Напишите функцию, которая принимает на вход список чисел и возвращает новый список,
# содержащий только те числа, которые являются простыми.

# def pr_ch(sp):
#
#     def op(cif):
#         count = 0
#         for i in range(1, cif + 1):
#             if cif % i == 0:
#                 count += 1
#         if count == 2:
#             return True
#         else:
#             return False # Опция не обязательно но так эстетичнее
#
#     sp_out = [cif for cif in sp if op(cif) == True]
#
#     return sp_out
#
# sp = [1, 2, 1, 6, 10, 2, 3, 5, 7, 11, 13, 17, 0, 99, 102, 88]
#
# print(pr_ch(sp))

# 5. Напишите функцию, которая принимает на вход список строк и возвращает новый список,
# содержащий только те строки, которые длиннее 5 символов.

# def long(s_t):
#     ret_s_t = [i for i in s_t if len(i) > 5]  # Это еще один вариант решения.
#
#     return ret_s_t
#
# s_t =["hgjhjy", "hjgjy", "hjh", "jbnvjhbh", "jbv"]
#
# print(long(s_t))

# 6. Напишите функцию, которая принимает на вход список чисел и возвращает новый список,
# содержащий те же числа, но умноженные на 2.

# def X2(num):
#     X2_out = [i * 2 for i in num]
#
#     return X2_out
#
# num = [2, 5, 3, 6, 1]
#
# print(X2(num))

# 7. Напишите функцию, которая принимает на вход список строк и возвращает новый список,
# содержащий только те строки, которые содержат хотя бы одну цифру.

# def cf(t):
#     ret = [i for i in t if i.isalpha() != True]
#     return ret
#
# t =["ag2hjy", "hjgey", "a1e", "jbnvehbh", "abv"]
#
# print(cf(t))

# 8. Напишите функцию, которая принимает на вход список строк и возвращает новый список,
# содержащий те же строки, но в верхнем регистре.

# def cf(t):
#     ret = [i.upper() for i in t]
#     return ret
#
# t =["ag2hjy", "hjgey", "a1e", "jbnvehbh", "abv"]
#
# print(cf(t))

# 1. Напишите функцию, которая принимает строку и возвращает список всех уникальных символов
# в этой строке.

# def uni_set(t):  # список неупорядоченных но уникальных объектов.
#     t_1 = list(set(t))
#     return t_1
#
# t = "jhbhkwhufygfgjjjj"
# print(uni_set(t))

# 2. Напишите функцию, которая принимает на вход список строк и возвращает новый список,
# содержащий только те строки, которые начинаются с буквы 'a' (большой или малой).

# def cf(t):
#     ret = [i for i in t if i.startswith("a") or i.startswith("A")]  
#     return ret
#
# t =["ag2hjy", "hjgey", "a1e", "Abnvehbh", "abv"]
#
# print(cf(t))

# 3. Напишите функцию, которая принимает на вход список чисел и возвращает новый список,
# содержащий только те числа, которые больше среднего значения всех чисел в списке.

# def sch(num):
#     sch_out = [i for i in num if i > sr(num)]
#
#     return sch_out
#
# def sr(num):
#     count = 0
#     for i in num:
#         count += i
#
#     return count / len(num)
#
#
#
# num = [2, 5, 3, 6, 1]
#
# print(sch(num))

# 4. Напишите функцию, которая принимает на вход список строк и возвращает новый список,
# содержащий те же строки, но с замененным первым символом на символ '*'
# (например, "hello" станет "*ello").

# def cf(t):
#     ret = ["*" + i[1:] for i in t] # пришлось подумать как красиво сделать))) из ДЗ №9 Сделал выводы))
#     return ret
#
# t =["ag2hjy", "hjgey", "a1e", "jbnvehbh", "abv"]
#
# print(cf(t))

# 5. Напишите функцию, которая принимает на вход список списков чисел и возвращает новый список,
# содержащий те же числа, но увеличенные на 1.

# def X2(num:int)->int:
#     X2_out = [i + 1 for i in num]
#
#     return X2_out
#
# num = [2, 5, 3, 6, 1]
#
# print(X2(num))

# Реализовать функцию игры "Камень, ножницы, бумага" для двух игроков.
# Функция принимает две строки, каждая из которых обозначает один из предметов:
# "камень", "ножницы", "бумага" и возвращает тот предмет, который является победителем, например:
# game("rock", "paper") - > paper is winner.


# def game(user_1, user_2):
#     uslovie = {"paper": "rock", "scissors": "paper", "rock": "scissors"}
#     for i, j in uslovie.items():
#         if user_1 == user_2:
#             return print("Ничья, сыграем еще разок?")
#         elif user_1 == i and user_2 == j:
#             return print(f"Победил элемент {user_1} и игрок 1")
#         elif user_2 == i and user_1 == j:
#             return print(f"Победил элемент {user_2} и игрок 2")
#
#
# user_1 = input("Игрок 1 вводит элемент: ")
# user_2 = input("Игрок 2 вводит элемент: ")
#
# game(user_1, user_2)

# my_dict = {'b': 2, 'a': 1, 'c': 3}
# sorted_list = sorted(my_dict.items())
# sorted_dict = {}
# for key, value in sorted_list:
#     sorted_dict[key] = value
# print(sorted_dict)
# print(sorted_list)


